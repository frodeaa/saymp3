#!/usr/bin/env bash

# This script use the OSX say command to convert input text to mp3
# The script requires lame and mp3val to be installed
#
#  $ brew install lame mp3val
#
# Example:
#
#  $ cat book.txt | saymp3 -v alex -r 200 -o book.mp3

me="$(basename "$(test -L "$0" && readlink "$0" || echo "$0")")"

function usage {
	cat <<EOF
usage: ${me} [-v voice] [-r rate] [-V quality] [-o output] [file...]

options:
  -v, -v=alex        specify the voice to be used.
  -r, -r=200         speech rate to be used, in words per minute.
  -V, -V=4           quality settings for VBR, 0=highest, 9=smaller file
  -o, o=out.mp3      output filename
  -h                 show help
EOF
	exit 1
}

set -e

voice="alex"
rate="200"
quality="4"
filename="out.mp3"

while getopts "hv:r:V:o:" opt; do
	case ${opt} in
		h)
			usage
			;;
		v)
			voice=${OPTARG}
			;;
		r)
			rate=${OPTARG}
			;;
		V)
			quality=${OPTARG}
			;;
		o)
			filename=${OPTARG}
			;;
		:)
			echo "option -$OPTARG requires an argument." >&2
			exit 1
		;;
	esac
done

shift $(( OPTIND-1 ))

# for line in file
# say line to aiff
# lame -q 0 -v -V <quality> file.aiff file.mp3
tmp_dir=`mktemp -d 2>/dev/null || mktemp -d -t "${me}"`
#trap 'rm -rf "${tmp_dir}"' EXIT
tmp_dir="/var/folders/9y/m3wsy91d3zz7_ymgpffwhsbh0000gn/T/saymp3.LoMgmqm7"
k=0
while read line;
do
	[ -z "$line" ] && continue
	tmp_out="${tmp_dir}/${k}.aiff"
	say -v "${voice}" -r "${rate}" -o "${tmp_out}" ${line}
	lame -S -q 0 -v -V "${quality}" "${tmp_out}" "${tmp_out}.mp3"
	rm "${tmp_out}"
	k=$((k + 1))
done < "${1:-/dev/stdin}"

find "${tmp_dir}" -name "*.mp3" | xargs cat >> "${filename}"
mp3val "${filename}" -f -nb

exit 1

