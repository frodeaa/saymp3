#!/usr/bin/env bash

# This script use the OSX say command to convert input text to mp3
# The script requires lame and mp3val to be installed
#
#  $ brew install lame mp3val
#
# Example:
#
#  $ cat book.txt | saymp3 -s alex -r 200 -o book.mp3

me="$(basename "$(test -L "$0" && readlink "$0" || echo "$0")")"
version="${me} version 0.1"

function usage {
	cat <<EOF
usage: ${me} [-s voice] [-r rate] [-q quality] [-o output] [file...]

create mp3 audio files from text input

options:
  -s, -s=alex        specify the voice to be used.
  -r, -r=200         speech rate to be used, in words per minute.
  -q, -q=4           quality settings for VBR, 0=highest, 9=smaller file
  -o, o=out.mp3      output filename
  -v                 show version
  -h                 show help
EOF
	exit 1
}

function requires_command {
	command -v "${1}" >/dev/null 2>&1 || { echo >&2 "require '${1}' but it's not installed."; exit 1; }
}

set -e

requires_command say
requires_command lame
requires_command mp3val

voice="alex"
rate="200"
quality="4"
filename="out.mp3"

while getopts "hvs:r:q:o:" opt; do
	case ${opt} in
		h)
			usage
			;;
		v)
			echo "${version}" && exit 0
			;;
		s)
			voice=${OPTARG}
			;;
		r)
			rate=${OPTARG}
			;;
		q)
			quality=${OPTARG}
			;;
		o)
			filename=${OPTARG}
			;;
		:)
			echo "option -$OPTARG requires an argument." >&2
			exit 1
		;;
	esac
done

shift $(( OPTIND-1 ))

tmp_dir=`mktemp -d 2>/dev/null || mktemp -d -t "${me}"`
trap 'rm -rf "${tmp_dir}"' EXIT

function tts_mp3 {
	local input="$1"
	local output="$2"
	say --voice="${voice}" --rate="${rate}" --output-file="${output}.aiff" "${input}"
	lame --quiet -q 0 -v -V "${quality}" "${output}.aiff" "${output}" && rm "${output}.aiff"
}

k=0
i=0
while read line;
do
	[ -z "$line" ] && continue
	(tts_mp3 ". ${line}" "${tmp_dir}/l_${k}_.mp3" >&2 & wait %1; echo $?) &
	if (( $k % 10 == 0 )); then wait; fi # LIMIT TO 10 sub processes
	k=$((k + 1))
done < "${1:-/dev/stdin}" | grep -qv 0 && exit 1

> "${filename}"
find "${tmp_dir}" -name "*.mp3" | sort -n -t _ -k 3 | xargs cat >> "${filename}"
mp3val "${filename}" -f -nb > /dev/null 2>&1
